<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
	</parent>

	<groupId>net.bull.javamelody</groupId>
	<artifactId>javamelody-for-spring-boot</artifactId>
	<version>1.71.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>JavaMelody - Spring Boot Example</name>
	<description>Example of embedding JavaMelody in a Spring Boot web application</description>
	<url>https://github.com/javamelody/javamelody/wiki</url>

	<properties>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<!-- tomcat 7 for tomcat7:run-war goal when not using spring-boot:run -->
		<tomcat.version>7.0.59</tomcat.version>

		<!-- Adapt this to a version found on http://central.maven.org/maven2/net/bull/javamelody/javamelody-spring-boot-starter/ -->
		<javamelody.version>${project.version}</javamelody.version>
	</properties>

	<dependencies>
		<!-- JavaMelody Spring Boot Starter -->
		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-spring-boot-starter</artifactId>
			<version>${javamelody.version}</version>
		</dependency>

		<!--  Note: if you have auto-proxy issues, you can add the following dependency
		and also javamelody: advisor-auto-proxy-creator-enabled: false in application.yml
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		
		or
		
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency> 
		-->
 
		<!-- Optional: iText dependency for PDF exports in JavaMelody -->
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7</version>
			<exclusions>
				<exclusion>
					<artifactId>bcmail-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bcprov-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bctsp-jdk14</artifactId>
					<groupId>bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Boot Web Starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- http://docs.spring.io/spring-boot/docs/1.5.x/reference/htmlsingle/#howto-use-tomcat-7 -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- "mvn tomcat7:run-war" can be used, to test with a war deployed in Tomcat, instead of spring-boot:run -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<port>8080</port>
					<path>/</path>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
